/* phxrpc_ftrl_stub.h

 Generated by phxrpc_pb2client from ftrl.proto

 Please DO NOT edit unless you know exactly what you are doing.

*/

#pragma once

#include "ftrl.pb.h"


namespace phxrpc {


class BaseMessageHandlerFactory;
class BaseTcpStream;
class ClientMonitor;


}


class FTRLStub {
  public:
    FTRLStub(phxrpc::BaseTcpStream &socket, phxrpc::ClientMonitor &client_monitor,
            phxrpc::BaseMessageHandlerFactory &msg_handler_factory);
    virtual ~FTRLStub();

    void set_keep_alive(const bool keep_alive);

    int PHXEcho(const google::protobuf::StringValue &req, google::protobuf::StringValue *resp);
    int FTRL(const ftrl::FTRLRequest &req, ftrl::FTRLResult *resp);
    int Feedback(const ftrl::FTRLFeedback &req, google::protobuf::Empty *resp);

  private:
    phxrpc::BaseTcpStream &socket_;
    phxrpc::ClientMonitor &client_monitor_;
    bool keep_alive_{false};
    phxrpc::BaseMessageHandlerFactory &msg_handler_factory_;
};

