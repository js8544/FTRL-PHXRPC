/* ftrl_tool_impl.cpp

 Generated by phxrpc_pb2tool from ftrl.proto

*/

#include "ftrl_tool_impl.h"

#include "ftrl_client.h"

#include "phxrpc/file.h"


using namespace phxrpc;
using namespace std;


FTRLToolImpl::FTRLToolImpl() {
}

FTRLToolImpl::~FTRLToolImpl() {
}

int FTRLToolImpl::PHXEcho(phxrpc::OptMap &opt_map) {
    google::protobuf::StringValue req;
    google::protobuf::StringValue resp;

    if (nullptr == opt_map.Get('s')) return -1;

    req.set_value(opt_map.Get('s'));

    FTRLClient client;
    int ret{client.PHXEcho(req, &resp)};
    printf("%s return %d\n", __func__, ret);
    printf("resp: {\n%s}\n", resp.DebugString().c_str());

    return ret;
}

int FTRLToolImpl::FTRL(phxrpc::OptMap &opt_map) {
    ftrl::FTRLRequest req;
    ftrl::FTRLResult resp;

    if (nullptr == opt_map.Get('u')) return -1;

    req.set_user_id(atoi(opt_map.Get('u')));

    FTRLClient client;
    int ret{client.FTRL(req, &resp)};
    printf("%s return %d\n", __func__, ret);
    printf("resp: {\n%s}\n", resp.DebugString().c_str());

    return ret;
}

int FTRLToolImpl::Feedback(phxrpc::OptMap &opt_map) {
    ftrl::FTRLFeedback req;
    google::protobuf::Empty resp;

    if (nullptr == opt_map.Get('u')) return -1;

    req.set_user_id(atoi(opt_map.Get('u')));

    if (nullptr == opt_map.Get('a')) return -1;

    req.set_ad_id(atoi(opt_map.Get('a')));

    if (nullptr == opt_map.Get('r')) return -1;

    req.set_feedback(atoi(opt_map.Get('r')));

    FTRLClient client;
    int ret{client.Feedback(req, &resp)};
    printf("%s return %d\n", __func__, ret);
    printf("resp: {\n%s}\n", resp.DebugString().c_str());

    return ret;
}

